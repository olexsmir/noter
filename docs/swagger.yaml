basePath: /api/v1/
definitions:
  domain.Note:
    properties:
      author_id:
        type: integer
      content:
        type: string
      created_at:
        type: string
      id:
        type: integer
      notebook_id:
        type: integer
      pinted:
        type: boolean
      title:
        type: string
      updated_at:
        type: string
    type: object
  domain.Notebook:
    properties:
      author_id:
        type: integer
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      updated_at:
        type: string
    type: object
  domain.Tokens:
    properties:
      access_token:
        type: string
      refresh_token:
        type: string
    type: object
  v1.noteCreateInput:
    properties:
      content:
        type: string
      title:
        type: string
    required:
    - content
    - title
    type: object
  v1.noteUpdateInput:
    properties:
      content:
        type: string
      pinted:
        type: boolean
      title:
        type: string
    type: object
  v1.notebookUpdateInput:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  v1.notebooksCreateInput:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  v1.response:
    properties:
      message:
        type: string
    type: object
  v1.userRefreshTokensInput:
    properties:
      refresh_token:
        type: string
    required:
    - refresh_token
    type: object
  v1.userSignInInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  v1.userSignUpInput:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
host: localhost:8000
info:
  contact: {}
  description: REST API for Noter
  title: Noter API
  version: "1.0"
paths:
  /auth/logout:
    post:
      consumes:
      - application/json
      description: user logout
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - user-auth: []
      summary: User logout
      tags:
      - auth
  /auth/refresh-tokens:
    post:
      consumes:
      - application/json
      description: user refresh tokens
      parameters:
      - description: sign up info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.userRefreshTokensInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Tokens'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: User Refresh Tokens
      tags:
      - auth
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: user sign in
      parameters:
      - description: sign up info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.userSignInInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Tokens'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: User SignIn
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: create user account
      parameters:
      - description: sign up info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.userSignUpInput'
      produces:
      - application/json
      responses:
        "201":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      summary: User SignUp
      tags:
      - auth
  /notebook:
    get:
      consumes:
      - application/json
      description: get all notebooks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Notebook'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - user-auth: []
      summary: Get all notebooks
      tags:
      - notebooks
    post:
      consumes:
      - application/json
      description: create new notebook
      parameters:
      - description: create notebook input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.notebooksCreateInput'
      produces:
      - application/json
      responses:
        "201":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - user-auth: []
      summary: Create notebook
      tags:
      - notebooks
  /notebook/{id}:
    delete:
      consumes:
      - application/json
      description: delete notebook
      parameters:
      - description: notebook_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - user-auth: []
      summary: Update notebook
      tags:
      - notebooks
    get:
      consumes:
      - application/json
      description: get notebook by id
      parameters:
      - description: notebook_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Notebook'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - user-auth: []
      summary: Get notebook by id
      tags:
      - notebooks
    put:
      consumes:
      - application/json
      description: update notebook
      parameters:
      - description: notebook_id
        in: path
        name: id
        required: true
        type: string
      - description: update info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.notebookUpdateInput'
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - user-auth: []
      summary: Update notebook
      tags:
      - notebooks
  /notebook/{notebook_id}/note:
    get:
      consumes:
      - application/json
      description: get all note from notebook
      parameters:
      - description: notebook_id
        in: path
        name: notebook_id
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Note'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - user-auth: []
      summary: Get all notes
      tags:
      - notes
    post:
      consumes:
      - application/json
      description: create new note
      parameters:
      - description: create note input
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.noteCreateInput'
      - description: notebook_id
        in: path
        name: notebook_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - user-auth: []
      summary: Create note in notebook
      tags:
      - notes
  /notebook/{notebook_id}/note/{id}:
    delete:
      consumes:
      - application/json
      description: delete note from notebook by id
      parameters:
      - description: notebook_id
        in: path
        name: notebook_id
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ""
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - user-auth: []
      summary: Delete note
      tags:
      - notes
    get:
      consumes:
      - application/json
      description: get a note by id
      parameters:
      - description: notebook_id
        in: path
        name: notebook_id
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Note'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - user-auth: []
      summary: Get note from notebook
      tags:
      - notes
    put:
      consumes:
      - application/json
      description: update note from notebook by id
      parameters:
      - description: notebook_id
        in: path
        name: notebook_id
        required: true
        type: string
      - description: id
        in: path
        name: id
        required: true
        type: string
      - description: update info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/v1.noteUpdateInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/domain.Note'
            type: array
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/v1.response'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/v1.response'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/v1.response'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/v1.response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/v1.response'
      security:
      - user-auth: []
      summary: Update note
      tags:
      - notes
securityDefinitions:
  UserAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
